'use client'

import React, { useState } from 'react'
import { useRouter } from 'next/navigation'
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs'
import { useAuthStore } from '@/lib/store/use-auth'
import { slugify } from '@/lib/utils' // Import slugify
import { Card, CardHeader, CardContent, CardTitle } from '@/components/ui/card'

export default function NewReleaseNotesScratchPage() {
  const router = useRouter()
  const supabase = createClientComponentClient()
  const { user } = useAuthStore()
  const [isCreating, setIsCreating] = useState(false)
  const [error, setError] = useState<string | null>(null)

  const handleCreateFromScratch = async () => {
    if (!user) {
        setError('User not authenticated.');
        return;
    }
    setIsCreating(true)
    setError(null)

    try {
      const defaultTitle = `New Release Notes ${new Date().toISOString().split('T')[0]}`
      const releaseSlug = slugify(defaultTitle) + '-' + Date.now().toString(36)

      // Create Initial Draft in Supabase with starter content
      const starterContent = `# Release Notes

## What's New
üöÄ Start writing about your new features here

## Bug Fixes
üêõ Document any bug fixes in this release

## Improvements
‚ö° List any improvements or enhancements

## Breaking Changes
‚ö†Ô∏è Note any breaking changes (if applicable)`

      const { data: draftNote, error: insertError } = await supabase
        .from('release_notes')
        .insert({
          organization_id: user.id, // Replace with actual org ID logic if needed
          title: defaultTitle,
          slug: releaseSlug,
          content_markdown: starterContent, // Provide starter markdown content
          content_html: '', // HTML will be generated by the editor
          status: 'draft',
        })
        .select('id')
        .single()

      if (insertError) {
         throw new Error(`Failed to create draft release note: ${insertError.message}`)
      }

      if (!draftNote || !draftNote.id) {
          throw new Error('Failed to create draft: No ID returned.')
      }

      // Redirect to the Editor Page
      router.push(`/dashboard/releases/editor/${draftNote.id}`)

    } catch (err) {
      console.error("Error creating draft from scratch:", err);
      setError(err instanceof Error ? err.message : 'Failed to create draft')
      setIsCreating(false) // Stop loading on error
    } 
    // No need to set isCreating to false on success due to redirect
  }

  return (
    <div className="flex h-full w-full flex-col items-center justify-center bg-default-background px-6 py-16">
      <div className="w-full max-w-md">
        <Card className="rounded-lg shadow-lg bg-white border-0">
          <CardHeader className="text-center pb-4">
            <div className="mx-auto w-16 h-16 bg-brand-100 rounded-full flex items-center justify-center mb-4">
              <span className="text-2xl">‚úçÔ∏è</span>
            </div>
            <CardTitle className="text-2xl font-bold text-gray-900">
              Create from Scratch
            </CardTitle>
            <p className="text-gray-600 mt-2">
              Start with a clean slate and craft your release notes using our professional editor
            </p>
          </CardHeader>
          <CardContent className="space-y-6 p-6">
            <div className="space-y-3">
              <div className="flex items-center gap-3 text-sm text-gray-600">
                <div className="w-2 h-2 bg-brand-500 rounded-full"></div>
                <span>Professional rich text editor</span>
              </div>
              <div className="flex items-center gap-3 text-sm text-gray-600">
                <div className="w-2 h-2 bg-brand-500 rounded-full"></div>
                <span>Markdown support with live preview</span>
              </div>
              <div className="flex items-center gap-3 text-sm text-gray-600">
                <div className="w-2 h-2 bg-brand-500 rounded-full"></div>
                <span>Built-in templates and formatting</span>
              </div>
            </div>
            
            {error && (
              <div className="rounded-md bg-red-50 p-4 border border-red-200">
                <p className="text-sm font-medium text-red-800">Error: {error}</p>
              </div>
            )}
            
            <div className="pt-4">
              <button
                type="button"
                onClick={handleCreateFromScratch}
                disabled={isCreating}
                className="w-full inline-flex justify-center items-center rounded-md bg-brand-600 px-4 py-3 text-sm font-semibold text-white shadow-sm hover:bg-brand-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-brand-600 disabled:opacity-50 transition-colors"
              >
                {isCreating ? (
                  <>
                    <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                    Creating Draft...
                  </>
                ) : (
                  'Start Writing'
                )}
              </button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
} 